<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;

function hello_cron(){
  drupal_set_message(t('hello man'), 'warning');
}

function hello_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    case 'help.page.hello':
      return '<p>' . t('hello page help'). '</p>';
  }
}

/**
 *Implements hook_user_login //remarque
 */

function hello_user_login($account){
 // kint($account);
  drupal_set_message(t('hello %name', ['%name' => $account->getAccountName()]
  ));
// % => c'est un placeholder
}

function hello_node_update(NodeInterface $node){
  $user = \Drupal::currentUser();
  $database = \Drupal::database();

  $database->insert('hello_node_history')
    ->fields([
      'nid' => $node->id(),
      'uid' => $user->id(),
      'update_time' => $node->getChangedTime(),
    ])
    ->execute();
}

function hello_node_delete(NodeInterface $node){
  $database = \Drupal::database();
  $database->delete('hello_node_history')
    ->condition('nid', $node->id())
    ->execute();
}
/**
 *1)on injecte des class correspondent à nos valeurs du select du block color
 */
function hello_preprocess_block(array &$variables){
   //drupal_set_message('test');
  $class = \Drupal::config('hello.config')->get('color');
  $variables['attributes']['class'][] = $class;
}
/**
 *
 *2)on créer une libraries et un css et cela permet à notre module de load la libraries, un
 *peu comme avec le theme
 */
function hello_page_attachments(array &$variables){
  $variables['#attached']['library'][] = 'hello/moncss';
}







